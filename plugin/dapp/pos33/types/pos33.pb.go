// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: pos33.proto

package types

import (
	context "context"
	types "github.com/33cn/chain33/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pos33Msg_Ty int32

const (
	Pos33Msg_MV Pos33Msg_Ty = 0 // maker vote msg
	Pos33Msg_BV Pos33Msg_Ty = 1 // block vote msg
	Pos33Msg_B  Pos33Msg_Ty = 2 // block msg
	Pos33Msg_MS Pos33Msg_Ty = 3 // maker sort msg
	Pos33Msg_VS Pos33Msg_Ty = 4 // voter sort msg
	Pos33Msg_CV Pos33Msg_Ty = 5 // comm vote msg
)

// Enum value maps for Pos33Msg_Ty.
var (
	Pos33Msg_Ty_name = map[int32]string{
		0: "MV",
		1: "BV",
		2: "B",
		3: "MS",
		4: "VS",
		5: "CV",
	}
	Pos33Msg_Ty_value = map[string]int32{
		"MV": 0,
		"BV": 1,
		"B":  2,
		"MS": 3,
		"VS": 4,
		"CV": 5,
	}
)

func (x Pos33Msg_Ty) Enum() *Pos33Msg_Ty {
	p := new(Pos33Msg_Ty)
	*p = x
	return p
}

func (x Pos33Msg_Ty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pos33Msg_Ty) Descriptor() protoreflect.EnumDescriptor {
	return file_pos33_proto_enumTypes[0].Descriptor()
}

func (Pos33Msg_Ty) Type() protoreflect.EnumType {
	return &file_pos33_proto_enumTypes[0]
}

func (x Pos33Msg_Ty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pos33Msg_Ty.Descriptor instead.
func (Pos33Msg_Ty) EnumDescriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{2, 0}
}

type Pos33Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
	// 0 -> 未成熟 1 -> 可挖矿 2 -> 已挖成功 3-> 已关闭
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// genesis 创建的私钥比较特殊
	IsGenesis bool `protobuf:"varint,3,opt,name=isGenesis,proto3" json:"isGenesis,omitempty"`
	// 开启的高度
	OpenHeight int64 `protobuf:"varint,4,opt,name=openHeight,proto3" json:"openHeight,omitempty"`
	// 关闭的高度
	CloseHeight int64 `protobuf:"varint,5,opt,name=closeHeight,proto3" json:"closeHeight,omitempty"`
	//挖到的币的数目
	MinerValue   int64  `protobuf:"varint,8,opt,name=minerValue,proto3" json:"minerValue,omitempty"`
	MinerAddress string `protobuf:"bytes,6,opt,name=minerAddress,proto3" json:"minerAddress,omitempty"`
	// return wallet
	ReturnAddress string `protobuf:"bytes,7,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
	// miner Price
	Price int64 `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Pos33Ticket) Reset() {
	*x = Pos33Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33Ticket) ProtoMessage() {}

func (x *Pos33Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33Ticket.ProtoReflect.Descriptor instead.
func (*Pos33Ticket) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{0}
}

func (x *Pos33Ticket) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *Pos33Ticket) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Pos33Ticket) GetIsGenesis() bool {
	if x != nil {
		return x.IsGenesis
	}
	return false
}

func (x *Pos33Ticket) GetOpenHeight() int64 {
	if x != nil {
		return x.OpenHeight
	}
	return 0
}

func (x *Pos33Ticket) GetCloseHeight() int64 {
	if x != nil {
		return x.CloseHeight
	}
	return 0
}

func (x *Pos33Ticket) GetMinerValue() int64 {
	if x != nil {
		return x.MinerValue
	}
	return 0
}

func (x *Pos33Ticket) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Pos33Ticket) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

func (x *Pos33Ticket) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// message for execs.ticket
type Pos33TicketAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Pos33TicketAction_Tbind
	//	*Pos33TicketAction_Topen
	//	*Pos33TicketAction_Genesis
	//	*Pos33TicketAction_Tclose
	//	*Pos33TicketAction_Miner
	Value isPos33TicketAction_Value `protobuf_oneof:"value"`
	Ty    int32                     `protobuf:"varint,10,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *Pos33TicketAction) Reset() {
	*x = Pos33TicketAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketAction) ProtoMessage() {}

func (x *Pos33TicketAction) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketAction.ProtoReflect.Descriptor instead.
func (*Pos33TicketAction) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{1}
}

func (m *Pos33TicketAction) GetValue() isPos33TicketAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Pos33TicketAction) GetTbind() *Pos33TicketBind {
	if x, ok := x.GetValue().(*Pos33TicketAction_Tbind); ok {
		return x.Tbind
	}
	return nil
}

func (x *Pos33TicketAction) GetTopen() *Pos33TicketOpen {
	if x, ok := x.GetValue().(*Pos33TicketAction_Topen); ok {
		return x.Topen
	}
	return nil
}

func (x *Pos33TicketAction) GetGenesis() *Pos33TicketGenesis {
	if x, ok := x.GetValue().(*Pos33TicketAction_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (x *Pos33TicketAction) GetTclose() *Pos33TicketClose {
	if x, ok := x.GetValue().(*Pos33TicketAction_Tclose); ok {
		return x.Tclose
	}
	return nil
}

func (x *Pos33TicketAction) GetMiner() *Pos33MinerMsg {
	if x, ok := x.GetValue().(*Pos33TicketAction_Miner); ok {
		return x.Miner
	}
	return nil
}

func (x *Pos33TicketAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isPos33TicketAction_Value interface {
	isPos33TicketAction_Value()
}

type Pos33TicketAction_Tbind struct {
	Tbind *Pos33TicketBind `protobuf:"bytes,5,opt,name=tbind,proto3,oneof"`
}

type Pos33TicketAction_Topen struct {
	Topen *Pos33TicketOpen `protobuf:"bytes,1,opt,name=topen,proto3,oneof"`
}

type Pos33TicketAction_Genesis struct {
	Genesis *Pos33TicketGenesis `protobuf:"bytes,2,opt,name=genesis,proto3,oneof"`
}

type Pos33TicketAction_Tclose struct {
	Tclose *Pos33TicketClose `protobuf:"bytes,3,opt,name=tclose,proto3,oneof"`
}

type Pos33TicketAction_Miner struct {
	Miner *Pos33MinerMsg `protobuf:"bytes,6,opt,name=miner,proto3,oneof"`
}

func (*Pos33TicketAction_Tbind) isPos33TicketAction_Value() {}

func (*Pos33TicketAction_Topen) isPos33TicketAction_Value() {}

func (*Pos33TicketAction_Genesis) isPos33TicketAction_Value() {}

func (*Pos33TicketAction_Tclose) isPos33TicketAction_Value() {}

func (*Pos33TicketAction_Miner) isPos33TicketAction_Value() {}

type Pos33Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte      `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Ty   Pos33Msg_Ty `protobuf:"varint,2,opt,name=ty,proto3,enum=types.Pos33Msg_Ty" json:"ty,omitempty"`
}

func (x *Pos33Msg) Reset() {
	*x = Pos33Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33Msg) ProtoMessage() {}

func (x *Pos33Msg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33Msg.ProtoReflect.Descriptor instead.
func (*Pos33Msg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{2}
}

func (x *Pos33Msg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Pos33Msg) GetTy() Pos33Msg_Ty {
	if x != nil {
		return x.Ty
	}
	return Pos33Msg_MV
}

type SortHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string tid = 1;
	Index int64  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Hash  []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Num   int32  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Time  int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SortHash) Reset() {
	*x = SortHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortHash) ProtoMessage() {}

func (x *SortHash) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortHash.ProtoReflect.Descriptor instead.
func (*SortHash) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{3}
}

func (x *SortHash) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SortHash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SortHash) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SortHash) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type VrfInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round  int32  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Ty     int32  `protobuf:"varint,3,opt,name=ty,proto3" json:"ty,omitempty"`
	Seed   []byte `protobuf:"bytes,4,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *VrfInput) Reset() {
	*x = VrfInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VrfInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VrfInput) ProtoMessage() {}

func (x *VrfInput) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VrfInput.ProtoReflect.Descriptor instead.
func (*VrfInput) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{4}
}

func (x *VrfInput) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VrfInput) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *VrfInput) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

func (x *VrfInput) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

type HashProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input *VrfInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// double diff = 2;
	VrfHash  []byte `protobuf:"bytes,5,opt,name=vrf_hash,json=vrfHash,proto3" json:"vrf_hash,omitempty"`
	VrfProof []byte `protobuf:"bytes,6,opt,name=vrf_proof,json=vrfProof,proto3" json:"vrf_proof,omitempty"`
	Pubkey   []byte `protobuf:"bytes,7,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (x *HashProof) Reset() {
	*x = HashProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashProof) ProtoMessage() {}

func (x *HashProof) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashProof.ProtoReflect.Descriptor instead.
func (*HashProof) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{5}
}

func (x *HashProof) GetInput() *VrfInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *HashProof) GetVrfHash() []byte {
	if x != nil {
		return x.VrfHash
	}
	return nil
}

func (x *HashProof) GetVrfProof() []byte {
	if x != nil {
		return x.VrfProof
	}
	return nil
}

func (x *HashProof) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

type Pos33SortMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortHash *SortHash  `protobuf:"bytes,1,opt,name=sort_hash,json=sortHash,proto3" json:"sort_hash,omitempty"`
	Proof    *HashProof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *Pos33SortMsg) Reset() {
	*x = Pos33SortMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33SortMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33SortMsg) ProtoMessage() {}

func (x *Pos33SortMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33SortMsg.ProtoReflect.Descriptor instead.
func (*Pos33SortMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{6}
}

func (x *Pos33SortMsg) GetSortHash() *SortHash {
	if x != nil {
		return x.SortHash
	}
	return nil
}

func (x *Pos33SortMsg) GetProof() *HashProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type Pos33Sorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sorts []*Pos33SortMsg `protobuf:"bytes,1,rep,name=sorts,proto3" json:"sorts,omitempty"`
}

func (x *Pos33Sorts) Reset() {
	*x = Pos33Sorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33Sorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33Sorts) ProtoMessage() {}

func (x *Pos33Sorts) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33Sorts.ProtoReflect.Descriptor instead.
func (*Pos33Sorts) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{7}
}

func (x *Pos33Sorts) GetSorts() []*Pos33SortMsg {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type Pos33VoteSorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteSorts []*Pos33Sorts `protobuf:"bytes,1,rep,name=vote_sorts,json=voteSorts,proto3" json:"vote_sorts,omitempty"`
}

func (x *Pos33VoteSorts) Reset() {
	*x = Pos33VoteSorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33VoteSorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33VoteSorts) ProtoMessage() {}

func (x *Pos33VoteSorts) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33VoteSorts.ProtoReflect.Descriptor instead.
func (*Pos33VoteSorts) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{8}
}

func (x *Pos33VoteSorts) GetVoteSorts() []*Pos33Sorts {
	if x != nil {
		return x.VoteSorts
	}
	return nil
}

type Pos33Online struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Onlined bool             `protobuf:"varint,2,opt,name=onlined,proto3" json:"onlined,omitempty"`
	Sig     *types.Signature `protobuf:"bytes,3,opt,name=Sig,proto3" json:"Sig,omitempty"`
}

func (x *Pos33Online) Reset() {
	*x = Pos33Online{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33Online) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33Online) ProtoMessage() {}

func (x *Pos33Online) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33Online.ProtoReflect.Descriptor instead.
func (*Pos33Online) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{9}
}

func (x *Pos33Online) GetOnlined() bool {
	if x != nil {
		return x.Onlined
	}
	return false
}

func (x *Pos33Online) GetSig() *types.Signature {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Pos33BlockMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B   *types.Block `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	Pid string       `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *Pos33BlockMsg) Reset() {
	*x = Pos33BlockMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33BlockMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33BlockMsg) ProtoMessage() {}

func (x *Pos33BlockMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33BlockMsg.ProtoReflect.Descriptor instead.
func (*Pos33BlockMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{10}
}

func (x *Pos33BlockMsg) GetB() *types.Block {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *Pos33BlockMsg) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

type Pos33BlockMsg2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B  *types.Block    `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	Vs []*Pos33VoteMsg `protobuf:"bytes,2,rep,name=vs,proto3" json:"vs,omitempty"`
}

func (x *Pos33BlockMsg2) Reset() {
	*x = Pos33BlockMsg2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33BlockMsg2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33BlockMsg2) ProtoMessage() {}

func (x *Pos33BlockMsg2) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33BlockMsg2.ProtoReflect.Descriptor instead.
func (*Pos33BlockMsg2) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{11}
}

func (x *Pos33BlockMsg2) GetB() *types.Block {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *Pos33BlockMsg2) GetVs() []*Pos33VoteMsg {
	if x != nil {
		return x.Vs
	}
	return nil
}

type Pos33VoteMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort  *Pos33SortMsg    `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	Hash  []byte           `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Round int32            `protobuf:"varint,4,opt,name=round,proto3" json:"round,omitempty"`
	Sig   *types.Signature `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Pos33VoteMsg) Reset() {
	*x = Pos33VoteMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33VoteMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33VoteMsg) ProtoMessage() {}

func (x *Pos33VoteMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33VoteMsg.ProtoReflect.Descriptor instead.
func (*Pos33VoteMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{12}
}

func (x *Pos33VoteMsg) GetSort() *Pos33SortMsg {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Pos33VoteMsg) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Pos33VoteMsg) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *Pos33VoteMsg) GetSig() *types.Signature {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Pos33DepositMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maddr       string `protobuf:"bytes,1,opt,name=maddr,proto3" json:"maddr,omitempty"`
	Raddr       string `protobuf:"bytes,4,opt,name=raddr,proto3" json:"raddr,omitempty"`
	Count       int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	PreCount    int64  `protobuf:"varint,5,opt,name=pre_count,json=preCount,proto3" json:"pre_count,omitempty"`
	CloseHeight int64  `protobuf:"varint,6,opt,name=close_height,json=closeHeight,proto3" json:"close_height,omitempty"`
	Reward      int64  `protobuf:"varint,3,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *Pos33DepositMsg) Reset() {
	*x = Pos33DepositMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33DepositMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33DepositMsg) ProtoMessage() {}

func (x *Pos33DepositMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33DepositMsg.ProtoReflect.Descriptor instead.
func (*Pos33DepositMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{13}
}

func (x *Pos33DepositMsg) GetMaddr() string {
	if x != nil {
		return x.Maddr
	}
	return ""
}

func (x *Pos33DepositMsg) GetRaddr() string {
	if x != nil {
		return x.Raddr
	}
	return ""
}

func (x *Pos33DepositMsg) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Pos33DepositMsg) GetPreCount() int64 {
	if x != nil {
		return x.PreCount
	}
	return 0
}

func (x *Pos33DepositMsg) GetCloseHeight() int64 {
	if x != nil {
		return x.CloseHeight
	}
	return 0
}

func (x *Pos33DepositMsg) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

type Pos33SortsVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MySorts     []*Pos33SortMsg  `protobuf:"bytes,1,rep,name=my_sorts,json=mySorts,proto3" json:"my_sorts,omitempty"`
	SelectSorts [][]byte         `protobuf:"bytes,2,rep,name=select_sorts,json=selectSorts,proto3" json:"select_sorts,omitempty"`
	Height      int64            `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Round       int32            `protobuf:"varint,4,opt,name=round,proto3" json:"round,omitempty"`
	Sig         *types.Signature `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *Pos33SortsVote) Reset() {
	*x = Pos33SortsVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33SortsVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33SortsVote) ProtoMessage() {}

func (x *Pos33SortsVote) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33SortsVote.ProtoReflect.Descriptor instead.
func (*Pos33SortsVote) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{14}
}

func (x *Pos33SortsVote) GetMySorts() []*Pos33SortMsg {
	if x != nil {
		return x.MySorts
	}
	return nil
}

func (x *Pos33SortsVote) GetSelectSorts() [][]byte {
	if x != nil {
		return x.SelectSorts
	}
	return nil
}

func (x *Pos33SortsVote) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Pos33SortsVote) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *Pos33SortsVote) GetSig() *types.Signature {
	if x != nil {
		return x.Sig
	}
	return nil
}

type Pos33SortMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortMap map[string]*Pos33SortMsg `protobuf:"bytes,1,rep,name=sort_map,json=sortMap,proto3" json:"sort_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pos33SortMap) Reset() {
	*x = Pos33SortMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33SortMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33SortMap) ProtoMessage() {}

func (x *Pos33SortMap) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33SortMap.ProtoReflect.Descriptor instead.
func (*Pos33SortMap) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{15}
}

func (x *Pos33SortMap) GetSortMap() map[string]*Pos33SortMsg {
	if x != nil {
		return x.SortMap
	}
	return nil
}

type Pos33Votes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vs []*Pos33VoteMsg `protobuf:"bytes,1,rep,name=vs,proto3" json:"vs,omitempty"`
}

func (x *Pos33Votes) Reset() {
	*x = Pos33Votes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33Votes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33Votes) ProtoMessage() {}

func (x *Pos33Votes) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33Votes.ProtoReflect.Descriptor instead.
func (*Pos33Votes) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{16}
}

func (x *Pos33Votes) GetVs() []*Pos33VoteMsg {
	if x != nil {
		return x.Vs
	}
	return nil
}

type Pos33MakerVotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mvs []*Pos33Votes `protobuf:"bytes,1,rep,name=mvs,proto3" json:"mvs,omitempty"`
}

func (x *Pos33MakerVotes) Reset() {
	*x = Pos33MakerVotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33MakerVotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33MakerVotes) ProtoMessage() {}

func (x *Pos33MakerVotes) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33MakerVotes.ProtoReflect.Descriptor instead.
func (*Pos33MakerVotes) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{17}
}

func (x *Pos33MakerVotes) GetMvs() []*Pos33Votes {
	if x != nil {
		return x.Mvs
	}
	return nil
}

type Pos33TicketMiner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort      *Pos33SortMsg   `protobuf:"bytes,1,opt,name=sort,proto3" json:"sort,omitempty"`
	Vs        []*Pos33VoteMsg `protobuf:"bytes,2,rep,name=vs,proto3" json:"vs,omitempty"`
	BlockTime int64           `protobuf:"varint,4,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
}

func (x *Pos33TicketMiner) Reset() {
	*x = Pos33TicketMiner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketMiner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketMiner) ProtoMessage() {}

func (x *Pos33TicketMiner) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketMiner.ProtoReflect.Descriptor instead.
func (*Pos33TicketMiner) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{18}
}

func (x *Pos33TicketMiner) GetSort() *Pos33SortMsg {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Pos33TicketMiner) GetVs() []*Pos33VoteMsg {
	if x != nil {
		return x.Vs
	}
	return nil
}

func (x *Pos33TicketMiner) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type Pos33MinerMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsPkList [][]byte      `protobuf:"bytes,1,rep,name=BlsPkList,proto3" json:"BlsPkList,omitempty"`
	BlsSig    []byte        `protobuf:"bytes,2,opt,name=BlsSig,proto3" json:"BlsSig,omitempty"`
	Hash      []byte        `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Sort      *Pos33SortMsg `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	BlockTime int64         `protobuf:"varint,4,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
}

func (x *Pos33MinerMsg) Reset() {
	*x = Pos33MinerMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33MinerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33MinerMsg) ProtoMessage() {}

func (x *Pos33MinerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33MinerMsg.ProtoReflect.Descriptor instead.
func (*Pos33MinerMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{19}
}

func (x *Pos33MinerMsg) GetBlsPkList() [][]byte {
	if x != nil {
		return x.BlsPkList
	}
	return nil
}

func (x *Pos33MinerMsg) GetBlsSig() []byte {
	if x != nil {
		return x.BlsSig
	}
	return nil
}

func (x *Pos33MinerMsg) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Pos33MinerMsg) GetSort() *Pos33SortMsg {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Pos33MinerMsg) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type Pos33MinerFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag    int32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	Reserve int64 `protobuf:"varint,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
}

func (x *Pos33MinerFlag) Reset() {
	*x = Pos33MinerFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33MinerFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33MinerFlag) ProtoMessage() {}

func (x *Pos33MinerFlag) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33MinerFlag.ProtoReflect.Descriptor instead.
func (*Pos33MinerFlag) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{20}
}

func (x *Pos33MinerFlag) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *Pos33MinerFlag) GetReserve() int64 {
	if x != nil {
		return x.Reserve
	}
	return 0
}

type Pos33PrivMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priv []byte `protobuf:"bytes,1,opt,name=priv,proto3" json:"priv,omitempty"`
}

func (x *Pos33PrivMsg) Reset() {
	*x = Pos33PrivMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33PrivMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33PrivMsg) ProtoMessage() {}

func (x *Pos33PrivMsg) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33PrivMsg.ProtoReflect.Descriptor instead.
func (*Pos33PrivMsg) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{21}
}

func (x *Pos33PrivMsg) GetPriv() []byte {
	if x != nil {
		return x.Priv
	}
	return nil
}

type Pos33TicketBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress,proto3" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
}

func (x *Pos33TicketBind) Reset() {
	*x = Pos33TicketBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketBind) ProtoMessage() {}

func (x *Pos33TicketBind) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketBind.ProtoReflect.Descriptor instead.
func (*Pos33TicketBind) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{22}
}

func (x *Pos33TicketBind) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Pos33TicketBind) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

type Pos33TicketOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户挖矿的ticket 地址
	MinerAddress string `protobuf:"bytes,1,opt,name=minerAddress,proto3" json:"minerAddress,omitempty"`
	//币实际存储的地址
	ReturnAddress string `protobuf:"bytes,3,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
	//聚合签名的地址
	BlsAddress string `protobuf:"bytes,6,opt,name=blsAddress,proto3" json:"blsAddress,omitempty"`
	//购买ticket的数目
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	//随机种子
	RandSeed int64 `protobuf:"varint,4,opt,name=randSeed,proto3" json:"randSeed,omitempty"`
}

func (x *Pos33TicketOpen) Reset() {
	*x = Pos33TicketOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketOpen) ProtoMessage() {}

func (x *Pos33TicketOpen) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketOpen.ProtoReflect.Descriptor instead.
func (*Pos33TicketOpen) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{23}
}

func (x *Pos33TicketOpen) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Pos33TicketOpen) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

func (x *Pos33TicketOpen) GetBlsAddress() string {
	if x != nil {
		return x.BlsAddress
	}
	return ""
}

func (x *Pos33TicketOpen) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Pos33TicketOpen) GetRandSeed() int64 {
	if x != nil {
		return x.RandSeed
	}
	return 0
}

type Pos33TicketGenesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress  string `protobuf:"bytes,1,opt,name=minerAddress,proto3" json:"minerAddress,omitempty"`
	ReturnAddress string `protobuf:"bytes,2,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
	BlsAddress    string `protobuf:"bytes,6,opt,name=blsAddress,proto3" json:"blsAddress,omitempty"`
	Count         int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Pos33TicketGenesis) Reset() {
	*x = Pos33TicketGenesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketGenesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketGenesis) ProtoMessage() {}

func (x *Pos33TicketGenesis) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketGenesis.ProtoReflect.Descriptor instead.
func (*Pos33TicketGenesis) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{24}
}

func (x *Pos33TicketGenesis) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Pos33TicketGenesis) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

func (x *Pos33TicketGenesis) GetBlsAddress() string {
	if x != nil {
		return x.BlsAddress
	}
	return ""
}

func (x *Pos33TicketGenesis) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Pos33TicketClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated string ticketId = 1;
	MinerAddress string `protobuf:"bytes,2,opt,name=minerAddress,proto3" json:"minerAddress,omitempty"`
	Count        int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Pos33TicketClose) Reset() {
	*x = Pos33TicketClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketClose) ProtoMessage() {}

func (x *Pos33TicketClose) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketClose.ProtoReflect.Descriptor instead.
func (*Pos33TicketClose) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{25}
}

func (x *Pos33TicketClose) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *Pos33TicketClose) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Pos33TicketReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Pos33TicketReward) Reset() {
	*x = Pos33TicketReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketReward) ProtoMessage() {}

func (x *Pos33TicketReward) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketReward.ProtoReflect.Descriptor instead.
func (*Pos33TicketReward) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{26}
}

func (x *Pos33TicketReward) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Pos33TicketReward) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Pos33TicketList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Pos33TicketList) Reset() {
	*x = Pos33TicketList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos33TicketList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos33TicketList) ProtoMessage() {}

func (x *Pos33TicketList) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos33TicketList.ProtoReflect.Descriptor instead.
func (*Pos33TicketList) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{27}
}

func (x *Pos33TicketList) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Pos33TicketList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReplyPos33TicketReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoterReward int64 `protobuf:"varint,1,opt,name=voter_reward,json=voterReward,proto3" json:"voter_reward,omitempty"`
	MinerReward int64 `protobuf:"varint,2,opt,name=miner_reward,json=minerReward,proto3" json:"miner_reward,omitempty"`
}

func (x *ReplyPos33TicketReward) Reset() {
	*x = ReplyPos33TicketReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyPos33TicketReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyPos33TicketReward) ProtoMessage() {}

func (x *ReplyPos33TicketReward) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyPos33TicketReward.ProtoReflect.Descriptor instead.
func (*ReplyPos33TicketReward) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{28}
}

func (x *ReplyPos33TicketReward) GetVoterReward() int64 {
	if x != nil {
		return x.VoterReward
	}
	return 0
}

func (x *ReplyPos33TicketReward) GetMinerReward() int64 {
	if x != nil {
		return x.MinerReward
	}
	return 0
}

type ReplyWalletPos33Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Privkey []byte `protobuf:"bytes,2,opt,name=privkey,proto3" json:"privkey,omitempty"`
	Count   int64  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReplyWalletPos33Count) Reset() {
	*x = ReplyWalletPos33Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyWalletPos33Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyWalletPos33Count) ProtoMessage() {}

func (x *ReplyWalletPos33Count) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyWalletPos33Count.ProtoReflect.Descriptor instead.
func (*ReplyWalletPos33Count) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{29}
}

func (x *ReplyWalletPos33Count) GetPrivkey() []byte {
	if x != nil {
		return x.Privkey
	}
	return nil
}

func (x *ReplyWalletPos33Count) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReceiptPos33Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr  string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Count int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReceiptPos33Deposit) Reset() {
	*x = ReceiptPos33Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptPos33Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptPos33Deposit) ProtoMessage() {}

func (x *ReceiptPos33Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptPos33Deposit.ProtoReflect.Descriptor instead.
func (*ReceiptPos33Deposit) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{30}
}

func (x *ReceiptPos33Deposit) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReceiptPos33Deposit) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReceiptPos33Miner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr   string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Reward int64  `protobuf:"varint,3,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *ReceiptPos33Miner) Reset() {
	*x = ReceiptPos33Miner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptPos33Miner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptPos33Miner) ProtoMessage() {}

func (x *ReceiptPos33Miner) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptPos33Miner.ProtoReflect.Descriptor instead.
func (*ReceiptPos33Miner) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{31}
}

func (x *ReceiptPos33Miner) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReceiptPos33Miner) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

type ReceiptPos33TicketBind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldMinerAddress string `protobuf:"bytes,1,opt,name=oldMinerAddress,proto3" json:"oldMinerAddress,omitempty"`
	NewMinerAddress string `protobuf:"bytes,2,opt,name=newMinerAddress,proto3" json:"newMinerAddress,omitempty"`
	ReturnAddress   string `protobuf:"bytes,3,opt,name=returnAddress,proto3" json:"returnAddress,omitempty"`
}

func (x *ReceiptPos33TicketBind) Reset() {
	*x = ReceiptPos33TicketBind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptPos33TicketBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptPos33TicketBind) ProtoMessage() {}

func (x *ReceiptPos33TicketBind) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptPos33TicketBind.ProtoReflect.Descriptor instead.
func (*ReceiptPos33TicketBind) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{32}
}

func (x *ReceiptPos33TicketBind) GetOldMinerAddress() string {
	if x != nil {
		return x.OldMinerAddress
	}
	return ""
}

func (x *ReceiptPos33TicketBind) GetNewMinerAddress() string {
	if x != nil {
		return x.NewMinerAddress
	}
	return ""
}

func (x *ReceiptPos33TicketBind) GetReturnAddress() string {
	if x != nil {
		return x.ReturnAddress
	}
	return ""
}

type ReqBindPos33Miner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindAddr     string `protobuf:"bytes,1,opt,name=bindAddr,proto3" json:"bindAddr,omitempty"`
	OriginAddr   string `protobuf:"bytes,2,opt,name=originAddr,proto3" json:"originAddr,omitempty"`
	Amount       int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CheckBalance bool   `protobuf:"varint,4,opt,name=checkBalance,proto3" json:"checkBalance,omitempty"`
}

func (x *ReqBindPos33Miner) Reset() {
	*x = ReqBindPos33Miner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBindPos33Miner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBindPos33Miner) ProtoMessage() {}

func (x *ReqBindPos33Miner) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBindPos33Miner.ProtoReflect.Descriptor instead.
func (*ReqBindPos33Miner) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{33}
}

func (x *ReqBindPos33Miner) GetBindAddr() string {
	if x != nil {
		return x.BindAddr
	}
	return ""
}

func (x *ReqBindPos33Miner) GetOriginAddr() string {
	if x != nil {
		return x.OriginAddr
	}
	return ""
}

func (x *ReqBindPos33Miner) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqBindPos33Miner) GetCheckBalance() bool {
	if x != nil {
		return x.CheckBalance
	}
	return false
}

type ReplyBindPos33Miner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHex string `protobuf:"bytes,1,opt,name=txHex,proto3" json:"txHex,omitempty"`
}

func (x *ReplyBindPos33Miner) Reset() {
	*x = ReplyBindPos33Miner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos33_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyBindPos33Miner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyBindPos33Miner) ProtoMessage() {}

func (x *ReplyBindPos33Miner) ProtoReflect() protoreflect.Message {
	mi := &file_pos33_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyBindPos33Miner.ProtoReflect.Descriptor instead.
func (*ReplyBindPos33Miner) Descriptor() ([]byte, []int) {
	return file_pos33_proto_rawDescGZIP(), []int{34}
}

func (x *ReplyBindPos33Miner) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

var File_pos33_proto protoreflect.FileDescriptor

var file_pos33_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x33, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x02, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x33,
	0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x11,
	0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x05, 0x74, 0x62, 0x69, 0x6e,
	0x64, 0x12, 0x2e, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x65,
	0x6e, 0x12, 0x35, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x74, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x48, 0x00, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x77, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x73, 0x67, 0x2e,
	0x54, 0x79, 0x52, 0x02, 0x74, 0x79, 0x22, 0x33, 0x0a, 0x02, 0x54, 0x79, 0x12, 0x06, 0x0a, 0x02,
	0x4d, 0x56, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x56, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01,
	0x42, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x53, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x56,
	0x53, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x56, 0x10, 0x05, 0x22, 0x5a, 0x0a, 0x08, 0x53,
	0x6f, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x08, 0x56, 0x72, 0x66, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x72, 0x66, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x72,
	0x66, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x72,
	0x66, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x72, 0x66, 0x5f, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x76, 0x72, 0x66, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x64, 0x0a, 0x0c, 0x50, 0x6f,
	0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08,
	0x73, 0x6f, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x22, 0x37, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d,
	0x73, 0x67, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0e, 0x50, 0x6f, 0x73,
	0x33, 0x33, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x4b, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x53, 0x69, 0x67, 0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x6f,
	0x73, 0x33, 0x33, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x01, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x01, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x0e, 0x50, 0x6f, 0x73,
	0x33, 0x33, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x32, 0x12, 0x1a, 0x0a, 0x01, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x01, 0x62, 0x12, 0x23, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33,
	0x33, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x02, 0x76, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x0c, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x03, 0x73, 0x69, 0x67, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74,
	0x73, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x79, 0x5f, 0x73, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x79,
	0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x73, 0x69, 0x67, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d,
	0x61, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x4f, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31, 0x0a, 0x0a, 0x50, 0x6f, 0x73,
	0x33, 0x33, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33,
	0x33, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x02, 0x76, 0x73, 0x22, 0x36, 0x0a, 0x0f,
	0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x03, 0x6d, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x52,
	0x03, 0x6d, 0x76, 0x73, 0x22, 0x7e, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x23, 0x0a, 0x02, 0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x02, 0x76, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x73, 0x50, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x42, 0x6c, 0x73, 0x50, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x6c, 0x73, 0x53, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x42, 0x6c, 0x73, 0x53, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x27, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x53, 0x6f, 0x72, 0x74,
	0x4d, 0x73, 0x67, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x33, 0x33,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x33, 0x33,
	0x50, 0x72, 0x69, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x69, 0x76, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x72, 0x69, 0x76, 0x22, 0x5b, 0x0a, 0x0f, 0x50,
	0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x73,
	0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x73, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x73,
	0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x73,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x6c, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x4c, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a,
	0x11, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3d,
	0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5e, 0x0a,
	0x16, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x47, 0x0a,
	0x15, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x33,
	0x33, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x69, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x6c,
	0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x6e, 0x65, 0x77, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8b, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x32, 0xcd, 0x02, 0x0a, 0x05, 0x70, 0x6f, 0x73,
	0x33, 0x33, 0x12, 0x49, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x42, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x1a,
	0x1a, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x69, 0x6e,
	0x64, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x64, 0x72, 0x1a, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f,
	0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x4e, 0x69, 0x6c, 0x1a, 0x0c, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x15,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x33,
	0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x1a, 0x1d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x6f, 0x73, 0x33, 0x33, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pos33_proto_rawDescOnce sync.Once
	file_pos33_proto_rawDescData = file_pos33_proto_rawDesc
)

func file_pos33_proto_rawDescGZIP() []byte {
	file_pos33_proto_rawDescOnce.Do(func() {
		file_pos33_proto_rawDescData = protoimpl.X.CompressGZIP(file_pos33_proto_rawDescData)
	})
	return file_pos33_proto_rawDescData
}

var file_pos33_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pos33_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_pos33_proto_goTypes = []interface{}{
	(Pos33Msg_Ty)(0),               // 0: types.Pos33Msg.Ty
	(*Pos33Ticket)(nil),            // 1: types.Pos33Ticket
	(*Pos33TicketAction)(nil),      // 2: types.Pos33TicketAction
	(*Pos33Msg)(nil),               // 3: types.Pos33Msg
	(*SortHash)(nil),               // 4: types.SortHash
	(*VrfInput)(nil),               // 5: types.VrfInput
	(*HashProof)(nil),              // 6: types.HashProof
	(*Pos33SortMsg)(nil),           // 7: types.Pos33SortMsg
	(*Pos33Sorts)(nil),             // 8: types.Pos33Sorts
	(*Pos33VoteSorts)(nil),         // 9: types.Pos33VoteSorts
	(*Pos33Online)(nil),            // 10: types.Pos33Online
	(*Pos33BlockMsg)(nil),          // 11: types.Pos33BlockMsg
	(*Pos33BlockMsg2)(nil),         // 12: types.Pos33BlockMsg2
	(*Pos33VoteMsg)(nil),           // 13: types.Pos33VoteMsg
	(*Pos33DepositMsg)(nil),        // 14: types.Pos33DepositMsg
	(*Pos33SortsVote)(nil),         // 15: types.Pos33SortsVote
	(*Pos33SortMap)(nil),           // 16: types.Pos33SortMap
	(*Pos33Votes)(nil),             // 17: types.Pos33Votes
	(*Pos33MakerVotes)(nil),        // 18: types.Pos33MakerVotes
	(*Pos33TicketMiner)(nil),       // 19: types.Pos33TicketMiner
	(*Pos33MinerMsg)(nil),          // 20: types.Pos33MinerMsg
	(*Pos33MinerFlag)(nil),         // 21: types.Pos33MinerFlag
	(*Pos33PrivMsg)(nil),           // 22: types.Pos33PrivMsg
	(*Pos33TicketBind)(nil),        // 23: types.Pos33TicketBind
	(*Pos33TicketOpen)(nil),        // 24: types.Pos33TicketOpen
	(*Pos33TicketGenesis)(nil),     // 25: types.Pos33TicketGenesis
	(*Pos33TicketClose)(nil),       // 26: types.Pos33TicketClose
	(*Pos33TicketReward)(nil),      // 27: types.Pos33TicketReward
	(*Pos33TicketList)(nil),        // 28: types.Pos33TicketList
	(*ReplyPos33TicketReward)(nil), // 29: types.ReplyPos33TicketReward
	(*ReplyWalletPos33Count)(nil),  // 30: types.ReplyWalletPos33Count
	(*ReceiptPos33Deposit)(nil),    // 31: types.ReceiptPos33Deposit
	(*ReceiptPos33Miner)(nil),      // 32: types.ReceiptPos33Miner
	(*ReceiptPos33TicketBind)(nil), // 33: types.ReceiptPos33TicketBind
	(*ReqBindPos33Miner)(nil),      // 34: types.ReqBindPos33Miner
	(*ReplyBindPos33Miner)(nil),    // 35: types.ReplyBindPos33Miner
	nil,                            // 36: types.Pos33SortMap.SortMapEntry
	(*types.Signature)(nil),        // 37: types.Signature
	(*types.Block)(nil),            // 38: types.Block
	(*types.ReqAddr)(nil),          // 39: types.ReqAddr
	(*types.ReqNil)(nil),           // 40: types.ReqNil
	(*types.Int64)(nil),            // 41: types.Int64
	(*types.Reply)(nil),            // 42: types.Reply
}
var file_pos33_proto_depIdxs = []int32{
	23, // 0: types.Pos33TicketAction.tbind:type_name -> types.Pos33TicketBind
	24, // 1: types.Pos33TicketAction.topen:type_name -> types.Pos33TicketOpen
	25, // 2: types.Pos33TicketAction.genesis:type_name -> types.Pos33TicketGenesis
	26, // 3: types.Pos33TicketAction.tclose:type_name -> types.Pos33TicketClose
	20, // 4: types.Pos33TicketAction.miner:type_name -> types.Pos33MinerMsg
	0,  // 5: types.Pos33Msg.ty:type_name -> types.Pos33Msg.Ty
	5,  // 6: types.HashProof.input:type_name -> types.VrfInput
	4,  // 7: types.Pos33SortMsg.sort_hash:type_name -> types.SortHash
	6,  // 8: types.Pos33SortMsg.proof:type_name -> types.HashProof
	7,  // 9: types.Pos33Sorts.sorts:type_name -> types.Pos33SortMsg
	8,  // 10: types.Pos33VoteSorts.vote_sorts:type_name -> types.Pos33Sorts
	37, // 11: types.Pos33Online.Sig:type_name -> types.Signature
	38, // 12: types.Pos33BlockMsg.b:type_name -> types.Block
	38, // 13: types.Pos33BlockMsg2.b:type_name -> types.Block
	13, // 14: types.Pos33BlockMsg2.vs:type_name -> types.Pos33VoteMsg
	7,  // 15: types.Pos33VoteMsg.sort:type_name -> types.Pos33SortMsg
	37, // 16: types.Pos33VoteMsg.sig:type_name -> types.Signature
	7,  // 17: types.Pos33SortsVote.my_sorts:type_name -> types.Pos33SortMsg
	37, // 18: types.Pos33SortsVote.sig:type_name -> types.Signature
	36, // 19: types.Pos33SortMap.sort_map:type_name -> types.Pos33SortMap.SortMapEntry
	13, // 20: types.Pos33Votes.vs:type_name -> types.Pos33VoteMsg
	17, // 21: types.Pos33MakerVotes.mvs:type_name -> types.Pos33Votes
	7,  // 22: types.Pos33TicketMiner.sort:type_name -> types.Pos33SortMsg
	13, // 23: types.Pos33TicketMiner.vs:type_name -> types.Pos33VoteMsg
	7,  // 24: types.Pos33MinerMsg.sort:type_name -> types.Pos33SortMsg
	7,  // 25: types.Pos33SortMap.SortMapEntry.value:type_name -> types.Pos33SortMsg
	34, // 26: types.pos33.CreateBindMiner:input_type -> types.ReqBindPos33Miner
	39, // 27: types.pos33.GetPos33TicketCount:input_type -> types.ReqAddr
	40, // 28: types.pos33.GetAllPos33TicketCount:input_type -> types.ReqNil
	21, // 29: types.pos33.SetAutoMining:input_type -> types.Pos33MinerFlag
	27, // 30: types.pos33.GetPos33TicketReward:input_type -> types.Pos33TicketReward
	35, // 31: types.pos33.CreateBindMiner:output_type -> types.ReplyBindPos33Miner
	41, // 32: types.pos33.GetPos33TicketCount:output_type -> types.Int64
	41, // 33: types.pos33.GetAllPos33TicketCount:output_type -> types.Int64
	42, // 34: types.pos33.SetAutoMining:output_type -> types.Reply
	29, // 35: types.pos33.GetPos33TicketReward:output_type -> types.ReplyPos33TicketReward
	31, // [31:36] is the sub-list for method output_type
	26, // [26:31] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_pos33_proto_init() }
func file_pos33_proto_init() {
	if File_pos33_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pos33_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VrfInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33SortMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33Sorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33VoteSorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33Online); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33BlockMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33BlockMsg2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33VoteMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33DepositMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33SortsVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33SortMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33Votes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33MakerVotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketMiner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33MinerMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33MinerFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33PrivMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketGenesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos33TicketList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyPos33TicketReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyWalletPos33Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptPos33Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptPos33Miner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptPos33TicketBind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBindPos33Miner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos33_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyBindPos33Miner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pos33_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Pos33TicketAction_Tbind)(nil),
		(*Pos33TicketAction_Topen)(nil),
		(*Pos33TicketAction_Genesis)(nil),
		(*Pos33TicketAction_Tclose)(nil),
		(*Pos33TicketAction_Miner)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pos33_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pos33_proto_goTypes,
		DependencyIndexes: file_pos33_proto_depIdxs,
		EnumInfos:         file_pos33_proto_enumTypes,
		MessageInfos:      file_pos33_proto_msgTypes,
	}.Build()
	File_pos33_proto = out.File
	file_pos33_proto_rawDesc = nil
	file_pos33_proto_goTypes = nil
	file_pos33_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Pos33Client is the client API for Pos33 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Pos33Client interface {
	//创建绑定挖矿
	CreateBindMiner(ctx context.Context, in *ReqBindPos33Miner, opts ...grpc.CallOption) (*ReplyBindPos33Miner, error)
	//查询钱包票数
	GetPos33TicketCount(ctx context.Context, in *types.ReqAddr, opts ...grpc.CallOption) (*types.Int64, error)
	//查询钱包票数
	GetAllPos33TicketCount(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*types.Int64, error)
	//设置自动挖矿
	SetAutoMining(ctx context.Context, in *Pos33MinerFlag, opts ...grpc.CallOption) (*types.Reply, error)
	//查询奖励
	GetPos33TicketReward(ctx context.Context, in *Pos33TicketReward, opts ...grpc.CallOption) (*ReplyPos33TicketReward, error)
}

type pos33Client struct {
	cc grpc.ClientConnInterface
}

func NewPos33Client(cc grpc.ClientConnInterface) Pos33Client {
	return &pos33Client{cc}
}

func (c *pos33Client) CreateBindMiner(ctx context.Context, in *ReqBindPos33Miner, opts ...grpc.CallOption) (*ReplyBindPos33Miner, error) {
	out := new(ReplyBindPos33Miner)
	err := c.cc.Invoke(ctx, "/types.pos33/CreateBindMiner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pos33Client) GetPos33TicketCount(ctx context.Context, in *types.ReqAddr, opts ...grpc.CallOption) (*types.Int64, error) {
	out := new(types.Int64)
	err := c.cc.Invoke(ctx, "/types.pos33/GetPos33TicketCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pos33Client) GetAllPos33TicketCount(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*types.Int64, error) {
	out := new(types.Int64)
	err := c.cc.Invoke(ctx, "/types.pos33/GetAllPos33TicketCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pos33Client) SetAutoMining(ctx context.Context, in *Pos33MinerFlag, opts ...grpc.CallOption) (*types.Reply, error) {
	out := new(types.Reply)
	err := c.cc.Invoke(ctx, "/types.pos33/SetAutoMining", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pos33Client) GetPos33TicketReward(ctx context.Context, in *Pos33TicketReward, opts ...grpc.CallOption) (*ReplyPos33TicketReward, error) {
	out := new(ReplyPos33TicketReward)
	err := c.cc.Invoke(ctx, "/types.pos33/GetPos33TicketReward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Pos33Server is the server API for Pos33 service.
type Pos33Server interface {
	//创建绑定挖矿
	CreateBindMiner(context.Context, *ReqBindPos33Miner) (*ReplyBindPos33Miner, error)
	//查询钱包票数
	GetPos33TicketCount(context.Context, *types.ReqAddr) (*types.Int64, error)
	//查询钱包票数
	GetAllPos33TicketCount(context.Context, *types.ReqNil) (*types.Int64, error)
	//设置自动挖矿
	SetAutoMining(context.Context, *Pos33MinerFlag) (*types.Reply, error)
	//查询奖励
	GetPos33TicketReward(context.Context, *Pos33TicketReward) (*ReplyPos33TicketReward, error)
}

// UnimplementedPos33Server can be embedded to have forward compatible implementations.
type UnimplementedPos33Server struct {
}

func (*UnimplementedPos33Server) CreateBindMiner(context.Context, *ReqBindPos33Miner) (*ReplyBindPos33Miner, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBindMiner not implemented")
}
func (*UnimplementedPos33Server) GetPos33TicketCount(context.Context, *types.ReqAddr) (*types.Int64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPos33TicketCount not implemented")
}
func (*UnimplementedPos33Server) GetAllPos33TicketCount(context.Context, *types.ReqNil) (*types.Int64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPos33TicketCount not implemented")
}
func (*UnimplementedPos33Server) SetAutoMining(context.Context, *Pos33MinerFlag) (*types.Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAutoMining not implemented")
}
func (*UnimplementedPos33Server) GetPos33TicketReward(context.Context, *Pos33TicketReward) (*ReplyPos33TicketReward, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPos33TicketReward not implemented")
}

func RegisterPos33Server(s *grpc.Server, srv Pos33Server) {
	s.RegisterService(&_Pos33_serviceDesc, srv)
}

func _Pos33_CreateBindMiner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqBindPos33Miner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pos33Server).CreateBindMiner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.pos33/CreateBindMiner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pos33Server).CreateBindMiner(ctx, req.(*ReqBindPos33Miner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pos33_GetPos33TicketCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqAddr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pos33Server).GetPos33TicketCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.pos33/GetPos33TicketCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pos33Server).GetPos33TicketCount(ctx, req.(*types.ReqAddr))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pos33_GetAllPos33TicketCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqNil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pos33Server).GetAllPos33TicketCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.pos33/GetAllPos33TicketCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pos33Server).GetAllPos33TicketCount(ctx, req.(*types.ReqNil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pos33_SetAutoMining_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pos33MinerFlag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pos33Server).SetAutoMining(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.pos33/SetAutoMining",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pos33Server).SetAutoMining(ctx, req.(*Pos33MinerFlag))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pos33_GetPos33TicketReward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pos33TicketReward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Pos33Server).GetPos33TicketReward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.pos33/GetPos33TicketReward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Pos33Server).GetPos33TicketReward(ctx, req.(*Pos33TicketReward))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pos33_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.pos33",
	HandlerType: (*Pos33Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBindMiner",
			Handler:    _Pos33_CreateBindMiner_Handler,
		},
		{
			MethodName: "GetPos33TicketCount",
			Handler:    _Pos33_GetPos33TicketCount_Handler,
		},
		{
			MethodName: "GetAllPos33TicketCount",
			Handler:    _Pos33_GetAllPos33TicketCount_Handler,
		},
		{
			MethodName: "SetAutoMining",
			Handler:    _Pos33_SetAutoMining_Handler,
		},
		{
			MethodName: "GetPos33TicketReward",
			Handler:    _Pos33_GetPos33TicketReward_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pos33.proto",
}
