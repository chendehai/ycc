syntax = "proto3";
package types;
option go_package = "../types";

import "common.proto";
import "transaction.proto";
import "blockchain.proto";

message Pos33Ticket {
  string ticketId = 1;
  // 0 -> 未成熟 1 -> 可挖矿 2 -> 已挖成功 3-> 已关闭
  int32 status = 2;
  // genesis 创建的私钥比较特殊
  bool isGenesis = 3;
  // 开启的高度
  int64 openHeight = 4;
  // 关闭的高度
  int64 closeHeight = 5;
  //挖到的币的数目
  int64 minerValue = 8;
  string minerAddress = 6;
  // return wallet
  string returnAddress = 7;
  // miner Price
  int64 price = 9;
}

// message for execs.ticket
message Pos33TicketAction {
  oneof value {
    Pos33TicketBind tbind = 5;
    Pos33TicketOpen topen = 1;
    Pos33TicketGenesis genesis = 2;
    Pos33TicketClose tclose = 3;
    Pos33MinerMsg miner = 6;
  }
  int32 ty = 10;
}

message Pos33Msg {
  bytes data = 1;
  enum Ty {
    MV = 0; // maker vote msg
    BV = 1; // block vote msg
    B = 2;  // block msg
    MS = 3; // maker sort msg
    VS = 4; // voter sort msg
    CV = 5; // comm vote msg
  }
  Ty ty = 2;
}

message SortHash {
  // string tid = 1;
  int64 index = 1;
  bytes hash = 2;
  int32 num = 3;
  int64 time = 4;
}

message VrfInput {
  int64 height = 1;
  int32 round = 2;
  int32 ty = 3;
  bytes seed = 4;
}

message HashProof {
  VrfInput input = 1;
  // double diff = 2;
  bytes vrf_hash = 5;
  bytes vrf_proof = 6;
  bytes pubkey = 7;
}

message Pos33SortMsg {
  SortHash sort_hash = 1;
  HashProof proof = 2;
}

message Pos33Sorts { repeated Pos33SortMsg sorts = 1; }

message Pos33VoteSorts { repeated Pos33Sorts vote_sorts = 1; }

message Pos33Online {
  bool onlined = 2;
  Signature Sig = 3;
}

message Pos33BlockMsg {
  Block b = 1;
  string pid = 2;
}

message Pos33BlockMsg2 {
  Block b = 1;
  repeated Pos33VoteMsg vs = 2;
}

/*
message Pos33VoteMsg {
  int64 height = 1;
  int32 round = 2;
  bytes hash = 3; // block or maker hash
  repeated bytes sort_hashs = 5;
  Signature sig = 6;
}
*/

message Pos33VoteMsg {
  Pos33SortMsg sort = 1;
  bytes hash = 2;
  int32 round = 4;
  Signature sig = 3;
}

message Pos33DepositMsg {
  string maddr = 1;
  string raddr = 4;
  int64 count = 2;
  int64 pre_count = 5;
  int64 close_height = 6;
  int64 reward = 3;
}

message Pos33SortsVote {
  repeated Pos33SortMsg my_sorts = 1;
  repeated bytes select_sorts = 2;
  int64 height = 3;
  int32 round = 4;
  Signature sig = 5;
}

message Pos33SortMap { map<string, Pos33SortMsg> sort_map = 1; }

message Pos33Votes { repeated Pos33VoteMsg vs = 1; }
message Pos33MakerVotes { repeated Pos33Votes mvs = 1; }

message Pos33TicketMiner {
  Pos33SortMsg sort = 1;
  repeated Pos33VoteMsg vs = 2;
  int64 blockTime = 4;
}

message Pos33MinerMsg {
  repeated bytes BlsPkList = 1;
  bytes BlsSig = 2;
  bytes Hash = 3;
  Pos33SortMsg sort = 5;
  int64 blockTime = 4;
}

message Pos33MinerFlag {
  int32 flag = 1;
  int64 reserve = 2;
}

message Pos33PrivMsg { bytes priv = 1; }

message Pos33TicketBind {
  string minerAddress = 1;
  string returnAddress = 2;
}

message Pos33TicketOpen {
  //用户挖矿的ticket 地址
  string minerAddress = 1;
  //币实际存储的地址
  string returnAddress = 3;
  //聚合签名的地址
  string blsAddress = 6;
  //购买ticket的数目
  int32 count = 2;
  //随机种子
  int64 randSeed = 4;
  //购买ticket时公开
  // repeated bytes pubHashes = 5;
}

message Pos33TicketGenesis {
  string minerAddress = 1;
  string returnAddress = 2;
  string blsAddress = 6;
  int32 count = 3;
}

message Pos33TicketClose {
  // repeated string ticketId = 1;
  string minerAddress = 2;
  int32 count = 3;
}

message Pos33TicketReward {
  string addr = 1;
  int64 height = 2;
}

message Pos33TicketList {
  string addr = 1;
  int32 status = 3;
}

message ReplyPos33TicketReward {
  int64 voter_reward = 1;
  int64 miner_reward = 2;
}

message ReplyWalletPos33Count {
  bytes privkey = 2;
  int64 count = 1;
}

message ReceiptPos33Deposit {
  string addr = 1;
  int64 count = 3;
}

message ReceiptPos33Miner {
  string addr = 1;
  int64 reward = 3;
}

message ReceiptPos33TicketBind {
  string oldMinerAddress = 1;
  string newMinerAddress = 2;
  string returnAddress = 3;
}

message ReqBindPos33Miner {
  string bindAddr = 1;
  string originAddr = 2;
  int64 amount = 3;
  bool checkBalance = 4;
}

message ReplyBindPos33Miner { string txHex = 1; }

service pos33 {
  //创建绑定挖矿
  rpc CreateBindMiner(ReqBindPos33Miner) returns (ReplyBindPos33Miner) {}
  //查询钱包票数
  rpc GetPos33TicketCount(types.ReqAddr) returns (Int64) {}
  //查询钱包票数
  rpc GetAllPos33TicketCount(types.ReqNil) returns (Int64) {}
  //设置自动挖矿
  rpc SetAutoMining(Pos33MinerFlag) returns (Reply) {}
  //查询奖励
  rpc GetPos33TicketReward(Pos33TicketReward) returns (ReplyPos33TicketReward) {
  }
}